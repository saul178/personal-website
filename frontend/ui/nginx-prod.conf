worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Security settings
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    # Gzip compression (Cloudflare will handle this too, but good to have)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Upstream for backend
    upstream backend {
        server backend:8080;
    }

    server {
	    listen 3000;
	    server_name saulgv.dev;
	    server_tokens off;
	    return 301 https://www.saulgv.dev$request_uri;
    }

    # Main server block
    server {
        listen 3000;
        server_name www.saulgv.dev;
	server_tokens off;

	add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: blob: https://ghchart.rshah.org/072460/saul178.svg; connect-src 'self' https://www.saulgv.dev; media-src 'self' blob:; object-src 'none'; base-uri 'self';" always;

	# NOTE: this is to setup https connections, but i think cloudflare does this automatically??
	# listen 443 ssl;
	# ssl_certificate /path/to/cert.crt; # public key file
	# ssl_certificate_key path/to/signed.key; # private key file
        
        # Trust Cloudflare's forwarded headers
	set_real_ip_from 173.245.48.0/20;
	set_real_ip_from 103.21.244.0/22;
	set_real_ip_from 103.22.200.0/22;
	set_real_ip_from 103.31.4.0/22;
	set_real_ip_from 141.101.64.0/18;
	set_real_ip_from 108.162.192.0/18;
	set_real_ip_from 190.93.240.0/20;
	set_real_ip_from 188.114.96.0/20;
	set_real_ip_from 197.234.240.0/22;
	set_real_ip_from 198.41.128.0/17;
	set_real_ip_from 162.158.0.0/15;
	set_real_ip_from 104.16.0.0/13;
	set_real_ip_from 104.24.0.0/14;
	set_real_ip_from 172.64.0.0/13;
	set_real_ip_from 131.0.72.0/22;

	# IPv6 ranges
	set_real_ip_from 2400:cb00::/32;
	set_real_ip_from 2606:4700::/32;
	set_real_ip_from 2803:f800::/32;
	set_real_ip_from 2405:b500::/32;
	set_real_ip_from 2405:8100::/32;
	set_real_ip_from 2a06:98c0::/29;
	set_real_ip_from 2c0f:f248::/32;

        real_ip_header CF-Connecting-IP;

	if ($http_user_agent = "") {
	    return 403;
	}

	# Block common script scanners and bots
	if ($http_user_agent ~* (python-requests|curl|wget|libwww|HTTrack|nmap|sqlmap|masscan)) {
	    return 403;
	}

        # API routes with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
	    limit_except GET HEAD { deny all; }

            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

	location ~* /(wp-admin|wp-login|wp-content|wp-includes|xmlrpc\.php|\.php|\.env|setup\.config) {
	    return 444;
	}

        # Static files
        location / {
            limit_req zone=general burst=10 nodelay;
            
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
	    limit_except GET HEAD { deny all; }
            
            # Cache static assets (Cloudflare will respect these headers)
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
